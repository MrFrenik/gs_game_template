// simple.sf

pipeline { 

    raster { 
        face_culling: NONE
        primitive: LINES
        winding_order: CW
        index_buffer_element_size: UINT32
    },

    depth {
        func: LESS 
    },

    blend {
        func: ADD
        src:  ONE
        dst:  ONE_MINUS_SRC_COLOR
    },

    stencil {
    },

    shader { 

        vertex { 

            attributes { 

                mesh {
                    POSITION : a_position
                    TEXCOORD : a_uv
                    COLOR    : a_color
                } 
            }, 

            uniforms {
                mat4 u_mvp;
            },

            out {
                vec2 uv;
            },

            code { 
                void main() {
                    gl_Position = u_mvp * vec4(a_position, 1.0);
                    uv = vec2(a_uv.x, -a_uv.y);
                }
            }
        },

        fragment { 

            uniforms {
                sampler2D u_tex;
            }, 
            
            out {
                vec4 frag_color;
            },

            code {
                void main() {
                    frag_color = texture(u_tex, uv);
                }
            }
        } 
    } 
}
